services:
  cassandra1:
    image: cassandra:latest
    container_name: cassandra1
    hostname: cassandra1
    networks:
      - demo1-network-2
    ports:
      - "9042:9042"
    healthcheck:
      test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
      interval: 15s
      timeout: 10s
      retries: 10
    environment:
        CASSANDRA_BROADCAST_ADDRESS: cassandra1
        CASSANDRA_LISTEN_ADDRESS: cassandra1
        CASSANDRA_DC: datacenter1
        CASSANDRA_RACK: rack1
        CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch

  cassandra-load-keyspace:
    container_name: cassandra-load-keyspace
    image: cassandra:latest
    networks:
      - demo1-network-2
    depends_on:
      cassandra1:
        condition: service_healthy
    volumes:
      - ./cassandra_schema.cql:/schema.cql
    command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra1 -f /schema.cql"

  cassandra2:
    restart: on-failure:5
    image: cassandra:latest
    container_name: cassandra2
    hostname: cassandra2
    networks:
      - demo1-network-2
#    ports:
#      - "9043:9042"
    environment:
      CASSANDRA_BROADCAST_ADDRESS: cassandra2
      CASSANDRA_LISTEN_ADDRESS: cassandra2
      CASSANDRA_SEEDS: cassandra1
      CASSANDRA_DC: datacenter1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
    depends_on:
      cassandra1:
        condition: service_started
  cassandra3:
    restart: on-failure:5
    image: cassandra:latest
    container_name: cassandra3
    hostname: cassandra3
    networks:
      - demo1-network-2
#    ports:
#      - "9044:9042"
    environment:
      CASSANDRA_BROADCAST_ADDRESS: cassandra3
      CASSANDRA_LISTEN_ADDRESS: cassandra3
      CASSANDRA_SEEDS: cassandra1
      CASSANDRA_DC: datacenter1
      CASSANDRA_RACK: rack1
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
    depends_on:
      cassandra1:
        condition: service_started

  encoder-service:
    build: encoder
    restart: on-failure:10
    networks:
      - demo1-network-2
    depends_on:
      cassandra1:
        condition: service_healthy
    ports:
      - "8081:8080"

  decoder-service:
    build: decoder
    restart: on-failure:10
    networks:
      - demo1-network-2
    depends_on:
      cassandra1:
        condition: service_healthy
    ports:
      - "8082:8080"

networks:
  demo1-network-2:
    driver: overlay
    attachable: true